// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebGYM.Concrete;

namespace WebGYM.Concrete.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200705000422_inti")]
    partial class inti
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebGYM.Models.MemberRegistration", b =>
                {
                    b.Property<long>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Age")
                        .IsRequired();

                    b.Property<string>("Contactno")
                        .IsRequired();

                    b.Property<long?>("Createdby");

                    b.Property<DateTime?>("Dob")
                        .IsRequired();

                    b.Property<string>("EmailId")
                        .IsRequired();

                    b.Property<string>("Gender");

                    b.Property<DateTime?>("JoiningDate")
                        .IsRequired();

                    b.Property<long?>("MainMemberId");

                    b.Property<string>("MemImagePath");

                    b.Property<string>("MemImagename");

                    b.Property<string>("MemberFName")
                        .IsRequired();

                    b.Property<string>("MemberLName")
                        .IsRequired();

                    b.Property<string>("MemberMName")
                        .IsRequired();

                    b.Property<string>("MemberNo");

                    b.Property<long?>("ModifiedBy");

                    b.Property<int?>("PlanID");

                    b.Property<int?>("SchemeID");

                    b.HasKey("MemberId");

                    b.ToTable("MemberRegistration");
                });

            modelBuilder.Entity("WebGYM.Models.PaymentDetails", b =>
                {
                    b.Property<long>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<int?>("Createdby");

                    b.Property<long?>("MemberID");

                    b.Property<string>("MemberNo");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<DateTime>("NextRenwalDate");

                    b.Property<decimal?>("PaymentAmount");

                    b.Property<DateTime>("PaymentFromdt");

                    b.Property<DateTime>("PaymentTodt");

                    b.Property<string>("Paymenttype");

                    b.Property<int>("PlanID");

                    b.Property<string>("RecStatus");

                    b.Property<int?>("WorkouttypeID");

                    b.HasKey("PaymentID");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("WebGYM.Models.PeriodTB", b =>
                {
                    b.Property<int>("PeriodID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text");

                    b.Property<string>("Value");

                    b.HasKey("PeriodID");

                    b.ToTable("PeriodTB");
                });

            modelBuilder.Entity("WebGYM.Models.PlanMaster", b =>
                {
                    b.Property<int>("PlanID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<int?>("CreateUserID");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<int?>("ModifyUserID");

                    b.Property<int>("PeriodID");

                    b.Property<decimal?>("PlanAmount");

                    b.Property<string>("PlanName");

                    b.Property<bool>("RecStatus");

                    b.Property<int?>("SchemeID");

                    b.Property<string>("ServiceTax");

                    b.Property<decimal?>("ServicetaxAmount");

                    b.Property<string>("ServicetaxNo");

                    b.Property<decimal?>("TotalAmount");

                    b.HasKey("PlanID");

                    b.ToTable("PlanMaster");
                });

            modelBuilder.Entity("WebGYM.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("Status");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "admin",
                            Status = true
                        });
                });

            modelBuilder.Entity("WebGYM.Models.SchemeMaster", b =>
                {
                    b.Property<int>("SchemeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Createdby");

                    b.Property<DateTime>("Createddate");

                    b.Property<string>("SchemeName");

                    b.Property<bool>("Status");

                    b.HasKey("SchemeID");

                    b.ToTable("SchemeMaster");
                });

            modelBuilder.Entity("WebGYM.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contactno");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("Createdby");

                    b.Property<string>("EmailId");

                    b.Property<string>("FullName");

                    b.Property<string>("Password");

                    b.Property<bool>("Status");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Contactno = "212121212",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailId = "some-admin-email@nonce.fake",
                            FullName = "kerollos",
                            Password = "+nK/Ob7nYYUeC4+1qGRojg==",
                            Status = true,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("WebGYM.Models.UsersInRoles", b =>
                {
                    b.Property<int>("UserRolesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("UserRolesId");

                    b.ToTable("UsersInRoles");

                    b.HasData(
                        new
                        {
                            UserRolesId = 1,
                            RoleId = 1,
                            UserId = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
